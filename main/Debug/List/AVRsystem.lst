
AVRASM ver. 2.1.30  D:\cd\Embedded_System_internship\SonTruong\AVR\Debug\List\AVRsystem.asm Wed Sep 21 11:32:19 2022

D:\cd\Embedded_System_internship\SonTruong\AVR\Debug\List\AVRsystem.asm(1090): warning: Register r4 already defined by the .DEF directive
D:\cd\Embedded_System_internship\SonTruong\AVR\Debug\List\AVRsystem.asm(1091): warning: Register r5 already defined by the .DEF directive
D:\cd\Embedded_System_internship\SonTruong\AVR\Debug\List\AVRsystem.asm(1092): warning: Register r6 already defined by the .DEF directive
D:\cd\Embedded_System_internship\SonTruong\AVR\Debug\List\AVRsystem.asm(1093): warning: Register r7 already defined by the .DEF directive
D:\cd\Embedded_System_internship\SonTruong\AVR\Debug\List\AVRsystem.asm(1094): warning: Register r8 already defined by the .DEF directive
D:\cd\Embedded_System_internship\SonTruong\AVR\Debug\List\AVRsystem.asm(1095): warning: Register r9 already defined by the .DEF directive
D:\cd\Embedded_System_internship\SonTruong\AVR\Debug\List\AVRsystem.asm(1096): warning: Register r10 already defined by the .DEF directive
D:\cd\Embedded_System_internship\SonTruong\AVR\Debug\List\AVRsystem.asm(1097): warning: Register r11 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega128
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4096
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R4
                 	.DEF _i_msb=R5
                 	.DEF _pmenu=R6
                 	.DEF _pmenu_msb=R7
                 	.DEF _selectRow=R8
                 	.DEF _selectRow_msb=R9
                 	.DEF _temp=R10
                 	.DEF _temp_msb=R11
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 02ad 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000046 0000
000047 0000      	.DB  0x0,0x0,0x0,0x0
000048 0001      	.DB  0x1,0x0
                 
                 _0x3:
000049 f9c0
00004a b0a4
00004b 9299
00004c f882      	.DB  0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8
00004d 9080      	.DB  0x80,0x90
                 _0x4B:
00004e 0000
00004f 414d
000050 4e49
000051 4d20      	.DB  0x0,0x0,0x4D,0x41,0x49,0x4E,0x20,0x4D
000052 4e45
000053 0055
000054 0000
000055 0000      	.DB  0x45,0x4E,0x55,0x0,0x0,0x0,0x0,0x0
000056 0000
000057 0000
000058 0000
000059 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005a 2020
00005b 6553
00005c 736e
00005d 726f      	.DB  0x20,0x20,0x53,0x65,0x6E,0x73,0x6F,0x72
00005e 0073
00005f 0000
000060 0000
000061 0000      	.DB  0x73,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000062 0000
000063 0000
000064 0571
000065 2020      	.DB  0x0,0x0,0x0,0x0,LOW(_SensorMenu),HIGH(_SensorMenu),0x20,0x20
000066 6341
000067 7574
000068 7461
000069 726f      	.DB  0x41,0x63,0x74,0x75,0x61,0x74,0x6F,0x72
00006a 0073
00006b 0000
00006c 0000
00006d 0000      	.DB  0x73,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006e 0000
00006f 05cf
000070 2020
000071 6553      	.DB  0x0,0x0,LOW(_ActuatorMenu),HIGH(_ActuatorMenu),0x20,0x20,0x53,0x65
000072 7474
000073 6e69
000074 7367
000075 0000      	.DB  0x74,0x74,0x69,0x6E,0x67,0x73,0x0,0x0
000076 0000
000077 0000
000078 0000
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007a 062d      	.DB  LOW(_SetMenu),HIGH(_SetMenu)
                 _0x4C:
00007b 0513
00007c 4553
00007d 534e
00007e 524f      	.DB  LOW(_MainMenu),HIGH(_MainMenu),0x53,0x45,0x4E,0x53,0x4F,0x52
00007f 0053
000080 0000
000081 0000
000082 0000      	.DB  0x53,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000083 0000
000084 0000
000085 0000
000086 0001      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0
000087 2020
000088 6554
000089 706d
00008a 7265      	.DB  0x20,0x20,0x54,0x65,0x6D,0x70,0x65,0x72
00008b 7461
00008c 7275
00008d 0065
00008e 0000      	.DB  0x61,0x74,0x75,0x72,0x65,0x0,0x0,0x0
00008f 0000
000090 0000
000091 068b
000092 2020      	.DB  0x0,0x0,0x0,0x0,LOW(_TempMenu),HIGH(_TempMenu),0x20,0x20
000093 7548
000094 696d
000095 6964
000096 7974      	.DB  0x48,0x75,0x6D,0x69,0x64,0x69,0x74,0x79
000097 0000
000098 0000
000099 0000
00009a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009b 0000
00009c 06e9
00009d 2020
00009e 6f4e      	.DB  0x0,0x0,LOW(_HumiMenu),HIGH(_HumiMenu),0x20,0x20,0x4E,0x6F
00009f 656e      	.DB  0x6E,0x65
                 _0x4D:
0000a0 0571
0000a1 4554
0000a2 504d
0000a3 5245      	.DB  LOW(_SensorMenu),HIGH(_SensorMenu),0x54,0x45,0x4D,0x50,0x45,0x52
0000a4 5441
0000a5 5255
0000a6 0045
0000a7 0000      	.DB  0x41,0x54,0x55,0x52,0x45,0x0,0x0,0x0
0000a8 0000
0000a9 0000
0000aa 0000
0000ab 0001      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0
0000ac 2020
0000ad 4e4f
0000ae 0000
0000af 0000      	.DB  0x20,0x20,0x4F,0x4E,0x0,0x0,0x0,0x0
0000b0 0000
0000b1 0000
0000b2 0000
0000b3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b4 0000
0000b5 0000
0000b6 0000
0000b7 2020      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x20
0000b8 464f
0000b9 0046
0000ba 0000
0000bb 0000      	.DB  0x4F,0x46,0x46,0x0,0x0,0x0,0x0,0x0
0000bc 0000
0000bd 0000
0000be 0000
0000bf 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c0 0000
0000c1 0000
0000c2 2020
0000c3 6f4e      	.DB  0x0,0x0,0x0,0x0,0x20,0x20,0x4E,0x6F
0000c4 656e
0000c5 0000
0000c6 0000
0000c7 0000      	.DB  0x6E,0x65,0x0,0x0,0x0,0x0,0x0,0x0
0000c8 0000
0000c9 0000
0000ca 0000
0000cb 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000cc 0000
0000cd 001a
0000ce 042d      	.DB  0x0,0x0,0x1A,0x0,LOW(_ctrlDevice),HIGH(_ctrlDevice)
                 _0x4E:
0000cf 0571
0000d0 5548
0000d1 494d
0000d2 4944      	.DB  LOW(_SensorMenu),HIGH(_SensorMenu),0x48,0x55,0x4D,0x49,0x44,0x49
0000d3 5954
0000d4 0000
0000d5 0000
0000d6 0000      	.DB  0x54,0x59,0x0,0x0,0x0,0x0,0x0,0x0
0000d7 0000
0000d8 0000
0000d9 0000
0000da 0002      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x2,0x0
0000db 2020
0000dc 6f4e
0000dd 656e
0000de 0000      	.DB  0x20,0x20,0x4E,0x6F,0x6E,0x65,0x0,0x0
0000df 0000
0000e0 0000
0000e1 0000
0000e2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000e3 0000
0000e4 0000
0000e5 0000
0000e6 2020      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x20
0000e7 6f4e
0000e8 656e
0000e9 0000
0000ea 0000      	.DB  0x4E,0x6F,0x6E,0x65,0x0,0x0,0x0,0x0
0000eb 0000
0000ec 0000
0000ed 0000
0000ee 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ef 0000
0000f0 0000
0000f1 2020
0000f2 6f4e      	.DB  0x0,0x0,0x0,0x0,0x20,0x20,0x4E,0x6F
0000f3 656e      	.DB  0x6E,0x65
                 _0x4F:
0000f4 0513
0000f5 4341
0000f6 5554
0000f7 5441      	.DB  LOW(_MainMenu),HIGH(_MainMenu),0x41,0x43,0x54,0x55,0x41,0x54
0000f8 524f
0000f9 0053
0000fa 0000
0000fb 0000      	.DB  0x4F,0x52,0x53,0x0,0x0,0x0,0x0,0x0
0000fc 0000
0000fd 0000
0000fe 0000
0000ff 0002      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x2,0x0
000100 2020
000101 654c
000102 7364
000103 0000      	.DB  0x20,0x20,0x4C,0x65,0x64,0x73,0x0,0x0
000104 0000
000105 0000
000106 0000
000107 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000108 0000
000109 0000
00010a 0803
00010b 2020      	.DB  0x0,0x0,0x0,0x0,LOW(_LedMenu),HIGH(_LedMenu),0x20,0x20
00010c 6552
00010d 616c
00010e 7379
00010f 0000      	.DB  0x52,0x65,0x6C,0x61,0x79,0x73,0x0,0x0
000110 0000
000111 0000
000112 0000
000113 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000114 0000
000115 0747
000116 2020
000117 6f4d      	.DB  0x0,0x0,LOW(_RelayMenu),HIGH(_RelayMenu),0x20,0x20,0x4D,0x6F
000118 6f74
000119 7372
00011a 0000
00011b 0000      	.DB  0x74,0x6F,0x72,0x73,0x0,0x0,0x0,0x0
00011c 0000
00011d 0000
00011e 0000
00011f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000120 07a5      	.DB  LOW(_MotorMenu),HIGH(_MotorMenu)
                 _0x50:
000121 05cf
000122 454c
000123 5344
000124 0000      	.DB  LOW(_ActuatorMenu),HIGH(_ActuatorMenu),0x4C,0x45,0x44,0x53,0x0,0x0
000125 0000
000126 0000
000127 0000
000128 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000129 0000
00012a 0000
00012b 0000
00012c 0001      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0
00012d 2020
00012e 6953
00012f 676e
000130 656c      	.DB  0x20,0x20,0x53,0x69,0x6E,0x67,0x6C,0x65
000131 4c20
000132 6465
000133 0000
000134 0000      	.DB  0x20,0x4C,0x65,0x64,0x0,0x0,0x0,0x0
000135 0000
000136 0000
000137 091d
000138 2020      	.DB  0x0,0x0,0x0,0x0,LOW(_SingLedMenu),HIGH(_SingLedMenu),0x20,0x20
000139 2d37
00013a 6553
00013b 2067
00013c 654c      	.DB  0x37,0x2D,0x53,0x65,0x67,0x20,0x4C,0x65
00013d 0064
00013e 0000
00013f 0000
000140 0000      	.DB  0x64,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000141 0000
000142 097b
000143 2020
000144 6f4e      	.DB  0x0,0x0,LOW(_SevenSegLedMenu),HIGH(_SevenSegLedMenu),0x20,0x20,0x4E,0x6F
000145 656e      	.DB  0x6E,0x65
                 _0x51:
000146 0803
000147 4953
000148 474e
000149 454c      	.DB  LOW(_LedMenu),HIGH(_LedMenu),0x53,0x49,0x4E,0x47,0x4C,0x45
00014a 4c20
00014b 4445
00014c 0053
00014d 0000      	.DB  0x20,0x4C,0x45,0x44,0x53,0x0,0x0,0x0
00014e 0000
00014f 0000
000150 0000
000151 0001      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0
000152 2020
000153 4e49
000154 4554
000155 4c52      	.DB  0x20,0x20,0x49,0x4E,0x54,0x45,0x52,0x4C
000156 4145
000157 4556
000158 0000
000159 0000      	.DB  0x45,0x41,0x56,0x45,0x0,0x0,0x0,0x0
00015a 0000
00015b 0000
00015c 0000
00015d 2020      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x20
00015e 5552
00015f 004e
000160 0000
000161 0000      	.DB  0x52,0x55,0x4E,0x0,0x0,0x0,0x0,0x0
000162 0000
000163 0000
000164 0000
000165 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000166 0000
000167 0000
000168 2020
000169 464f      	.DB  0x0,0x0,0x0,0x0,0x20,0x20,0x4F,0x46
00016a 0046
00016b 0000
00016c 0000
00016d 0000      	.DB  0x46,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00016e 0000
00016f 0000
000170 0000
000171 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000172 0000
000173 0015
000174 042d      	.DB  0x0,0x0,0x15,0x0,LOW(_ctrlDevice),HIGH(_ctrlDevice)
                 _0x52:
000175 0803
000176 2d37
000177 4553
000178 2047      	.DB  LOW(_LedMenu),HIGH(_LedMenu),0x37,0x2D,0x53,0x45,0x47,0x20
000179 454c
00017a 5344
00017b 0000
00017c 0000      	.DB  0x4C,0x45,0x44,0x53,0x0,0x0,0x0,0x0
00017d 0000
00017e 0000
00017f 0000
000180 0002      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x2,0x0
000181 2020
000182 4e4f
000183 0000
000184 0000      	.DB  0x20,0x20,0x4F,0x4E,0x0,0x0,0x0,0x0
000185 0000
000186 0000
000187 0000
000188 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000189 0000
00018a 0000
00018b 0000
00018c 2020      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x20
00018d 464f
00018e 0046
00018f 0000
000190 0000      	.DB  0x4F,0x46,0x46,0x0,0x0,0x0,0x0,0x0
000191 0000
000192 0000
000193 0000
000194 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000195 0000
000196 0000
000197 2020
000198 6f4e      	.DB  0x0,0x0,0x0,0x0,0x20,0x20,0x4E,0x6F
000199 656e
00019a 0000
00019b 0000
00019c 0000      	.DB  0x6E,0x65,0x0,0x0,0x0,0x0,0x0,0x0
00019d 0000
00019e 0000
00019f 0000
0001a0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001a1 0000
0001a2 0016
0001a3 042d      	.DB  0x0,0x0,0x16,0x0,LOW(_ctrlDevice),HIGH(_ctrlDevice)
                 _0x53:
0001a4 05cf
0001a5 4552
0001a6 414c
0001a7 5359      	.DB  LOW(_ActuatorMenu),HIGH(_ActuatorMenu),0x52,0x45,0x4C,0x41,0x59,0x53
0001a8 0000
0001a9 0000
0001aa 0000
0001ab 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001ac 0000
0001ad 0000
0001ae 0000
0001af 0002      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x2,0x0
0001b0 2020
0001b1 4e4f
0001b2 0000
0001b3 0000      	.DB  0x20,0x20,0x4F,0x4E,0x0,0x0,0x0,0x0
0001b4 0000
0001b5 0000
0001b6 0000
0001b7 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001b8 0000
0001b9 0000
0001ba 0000
0001bb 2020      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x20
0001bc 464f
0001bd 0046
0001be 0000
0001bf 0000      	.DB  0x4F,0x46,0x46,0x0,0x0,0x0,0x0,0x0
0001c0 0000
0001c1 0000
0001c2 0000
0001c3 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001c4 0000
0001c5 0000
0001c6 2020
0001c7 464f      	.DB  0x0,0x0,0x0,0x0,0x20,0x20,0x4F,0x46
0001c8 2046
0001c9 5247
0001ca 4441
0001cb 4155      	.DB  0x46,0x20,0x47,0x52,0x41,0x44,0x55,0x41
0001cc 4c4c
0001cd 0059
0001ce 0000
0001cf 0000      	.DB  0x4C,0x4C,0x59,0x0,0x0,0x0,0x0,0x0
0001d0 0000
0001d1 0017
0001d2 042d      	.DB  0x0,0x0,0x17,0x0,LOW(_ctrlDevice),HIGH(_ctrlDevice)
                 _0x54:
0001d3 05cf
0001d4 4f4d
0001d5 4f54
0001d6 5352      	.DB  LOW(_ActuatorMenu),HIGH(_ActuatorMenu),0x4D,0x4F,0x54,0x4F,0x52,0x53
0001d7 0000
0001d8 0000
0001d9 0000
0001da 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001db 0000
0001dc 0000
0001dd 0000
0001de 0003      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x3,0x0
0001df 2020
0001e0 6f4d
0001e1 6f74
0001e2 3172      	.DB  0x20,0x20,0x4D,0x6F,0x74,0x6F,0x72,0x31
0001e3 0000
0001e4 0000
0001e5 0000
0001e6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001e7 0000
0001e8 0000
0001e9 0861
0001ea 2020      	.DB  0x0,0x0,0x0,0x0,LOW(_Motor1Menu),HIGH(_Motor1Menu),0x20,0x20
0001eb 6f4d
0001ec 6f74
0001ed 3272
0001ee 0000      	.DB  0x4D,0x6F,0x74,0x6F,0x72,0x32,0x0,0x0
0001ef 0000
0001f0 0000
0001f1 0000
0001f2 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0001f3 0000
0001f4 08bf
0001f5 2020
0001f6 6f4e      	.DB  0x0,0x0,LOW(_Motor2Menu),HIGH(_Motor2Menu),0x20,0x20,0x4E,0x6F
0001f7 656e      	.DB  0x6E,0x65
                 _0x55:
0001f8 07a5
0001f9 4f4d
0001fa 4f54
0001fb 2052      	.DB  LOW(_MotorMenu),HIGH(_MotorMenu),0x4D,0x4F,0x54,0x4F,0x52,0x20
0001fc 3130
0001fd 0000
0001fe 0000
0001ff 0000      	.DB  0x30,0x31,0x0,0x0,0x0,0x0,0x0,0x0
000200 0000
000201 0000
000202 0000
000203 0001      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0
000204 2020
000205 6f46
000206 7772
000207 7261      	.DB  0x20,0x20,0x46,0x6F,0x72,0x77,0x61,0x72
000208 0064
000209 0000
00020a 0000
00020b 0000      	.DB  0x64,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00020c 0000
00020d 0000
00020e 0000
00020f 2020      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x20
000210 6142
000211 6b63
000212 6177
000213 6472      	.DB  0x42,0x61,0x63,0x6B,0x77,0x61,0x72,0x64
000214 0000
000215 0000
000216 0000
000217 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000218 0000
000219 0000
00021a 2020
00021b 7453      	.DB  0x0,0x0,0x0,0x0,0x20,0x20,0x53,0x74
00021c 706f
00021d 0000
00021e 0000
00021f 0000      	.DB  0x6F,0x70,0x0,0x0,0x0,0x0,0x0,0x0
000220 0000
000221 0000
000222 0000
000223 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000224 0000
000225 0018
000226 042d      	.DB  0x0,0x0,0x18,0x0,LOW(_ctrlDevice),HIGH(_ctrlDevice)
                 _0x56:
000227 07a5
000228 4f4d
000229 4f54
00022a 2052      	.DB  LOW(_MotorMenu),HIGH(_MotorMenu),0x4D,0x4F,0x54,0x4F,0x52,0x20
00022b 3230
00022c 0000
00022d 0000
00022e 0000      	.DB  0x30,0x32,0x0,0x0,0x0,0x0,0x0,0x0
00022f 0000
000230 0000
000231 0000
000232 0002      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x2,0x0
000233 2020
000234 6f46
000235 7772
000236 7261      	.DB  0x20,0x20,0x46,0x6F,0x72,0x77,0x61,0x72
000237 0064
000238 0000
000239 0000
00023a 0000      	.DB  0x64,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00023b 0000
00023c 0000
00023d 0000
00023e 2020      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x20
00023f 6142
000240 6b63
000241 6177
000242 6472      	.DB  0x42,0x61,0x63,0x6B,0x77,0x61,0x72,0x64
000243 0000
000244 0000
000245 0000
000246 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000247 0000
000248 0000
000249 2020
00024a 7453      	.DB  0x0,0x0,0x0,0x0,0x20,0x20,0x53,0x74
00024b 706f
00024c 0000
00024d 0000
00024e 0000      	.DB  0x6F,0x70,0x0,0x0,0x0,0x0,0x0,0x0
00024f 0000
000250 0000
000251 0000
000252 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000253 0000
000254 0019
000255 042d      	.DB  0x0,0x0,0x19,0x0,LOW(_ctrlDevice),HIGH(_ctrlDevice)
                 _0x57:
000256 0513
000257 4553
000258 5454
000259 4e49      	.DB  LOW(_MainMenu),HIGH(_MainMenu),0x53,0x45,0x54,0x54,0x49,0x4E
00025a 5347
00025b 0000
00025c 0000
00025d 0000      	.DB  0x47,0x53,0x0,0x0,0x0,0x0,0x0,0x0
00025e 0000
00025f 0000
000260 0000
000261 0003      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x3,0x0
000262 2020
000263 6f4e
000264 656e
000265 0000      	.DB  0x20,0x20,0x4E,0x6F,0x6E,0x65,0x0,0x0
000266 0000
000267 0000
000268 0000
000269 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00026a 0000
00026b 0000
00026c 0000
00026d 2020      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x20
00026e 6f4e
00026f 656e
000270 0000
000271 0000      	.DB  0x4E,0x6F,0x6E,0x65,0x0,0x0,0x0,0x0
000272 0000
000273 0000
000274 0000
000275 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000276 0000
000277 0000
000278 2020
000279 6f4e      	.DB  0x0,0x0,0x0,0x0,0x20,0x20,0x4E,0x6F
00027a 656e      	.DB  0x6E,0x65
                 _0x0:
00027b 003e      	.DB  0x3E,0x0
                 
                 __GLOBAL_INI_TBL:
00027c 0006      	.DW  0x06
00027d 0004      	.DW  0x04
00027e 008c      	.DW  __REG_VARS*2
                 
00027f 000a      	.DW  0x0A
000280 0506      	.DW  _SegCode
000281 0092      	.DW  _0x3*2
                 
000282 0002      	.DW  0x02
000283 0500      	.DW  _0x1A
000284 04f6      	.DW  _0x0*2
                 
000285 005a      	.DW  0x5A
000286 0513      	.DW  _MainMenu
000287 009c      	.DW  _0x4B*2
                 
000288 004a      	.DW  0x4A
000289 0571      	.DW  _SensorMenu
00028a 00f6      	.DW  _0x4C*2
                 
00028b 005e      	.DW  0x5E
00028c 068b      	.DW  _TempMenu
00028d 0140      	.DW  _0x4D*2
                 
00028e 004a      	.DW  0x4A
00028f 06e9      	.DW  _HumiMenu
000290 019e      	.DW  _0x4E*2
                 
000291 005a      	.DW  0x5A
000292 05cf      	.DW  _ActuatorMenu
000293 01e8      	.DW  _0x4F*2
                 
000294 004a      	.DW  0x4A
000295 0803      	.DW  _LedMenu
000296 0242      	.DW  _0x50*2
                 
000297 005e      	.DW  0x5E
000298 091d      	.DW  _SingLedMenu
000299 028c      	.DW  _0x51*2
                 
00029a 005e      	.DW  0x5E
00029b 097b      	.DW  _SevenSegLedMenu
00029c 02ea      	.DW  _0x52*2
                 
00029d 005e      	.DW  0x5E
00029e 0747      	.DW  _RelayMenu
00029f 0348      	.DW  _0x53*2
                 
0002a0 004a      	.DW  0x4A
0002a1 07a5      	.DW  _MotorMenu
0002a2 03a6      	.DW  _0x54*2
                 
0002a3 005e      	.DW  0x5E
0002a4 0861      	.DW  _Motor1Menu
0002a5 03f0      	.DW  _0x55*2
                 
0002a6 005e      	.DW  0x5E
0002a7 08bf      	.DW  _Motor2Menu
0002a8 044e      	.DW  _0x56*2
                 
0002a9 004a      	.DW  0x4A
0002aa 062d      	.DW  _SetMenu
0002ab 04ac      	.DW  _0x57*2
                 
                 _0xFFFFFFFF:
0002ac 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0002ad 94f8      	CLI
0002ae 27ee      	CLR  R30
0002af bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0002b0 e0f1      	LDI  R31,1
0002b1 bff5      	OUT  MCUCR,R31
0002b2 bfe5      	OUT  MCUCR,R30
0002b3 93e0 006c 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
0002b5 e08d      	LDI  R24,(14-2)+1
0002b6 e0a2      	LDI  R26,2
0002b7 27bb      	CLR  R27
                 __CLEAR_REG:
0002b8 93ed      	ST   X+,R30
0002b9 958a      	DEC  R24
0002ba f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0002bb e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0002bc e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0002bd e0a0      	LDI  R26,LOW(__SRAM_START)
0002be e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0002bf 93ed      	ST   X+,R30
0002c0 9701      	SBIW R24,1
0002c1 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0002c2 efe8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0002c3 e0f4      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0002c4 9185      	LPM  R24,Z+
0002c5 9195      	LPM  R25,Z+
0002c6 9700      	SBIW R24,0
0002c7 f061      	BREQ __GLOBAL_INI_END
0002c8 91a5      	LPM  R26,Z+
0002c9 91b5      	LPM  R27,Z+
0002ca 9005      	LPM  R0,Z+
0002cb 9015      	LPM  R1,Z+
0002cc 01bf      	MOVW R22,R30
0002cd 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0002ce 9005      	LPM  R0,Z+
0002cf 920d      	ST   X+,R0
0002d0 9701      	SBIW R24,1
0002d1 f7e1      	BRNE __GLOBAL_INI_LOOP
0002d2 01fb      	MOVW R30,R22
0002d3 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
0002d4 bf8b      	OUT  RAMPZ,R24
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0002d5 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0002d6 bfed      	OUT  SPL,R30
0002d7 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0002d8 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0002d9 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0002da e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0002db 940c 04ee 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ; * main.c
                 ; *
                 ; * Created: 8/26/2022 9:58:33 PM
                 ; * Author: DELL
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include "userdef.h"
                 
                 	.CSEG
                 _displayLEDs:
                 ; .FSTART _displayLEDs
0002dd 940e 0751 	CALL __PUTPARD2
                 ;	led -> Y+0
0002df 81e8      	LD   R30,Y
0002e0 93e0 1100 	STS  4352,R30
0002e2 940e 074c 	CALL __GETD2S0
0002e4 e0e8      	LDI  R30,LOW(8)
0002e5 940e 06fc 	CALL __LSRD12
0002e7 93e0 1101 	STS  4353,R30
0002e9 940e 0747 	CALL __GETD1S0
0002eb 940e 0708 	CALL __LSRD16
0002ed 93e0 1102 	STS  4354,R30
0002ef e1e8      	LDI  R30,LOW(24)
0002f0 940e 06fc 	CALL __LSRD12
0002f2 93e0 1103 	STS  4355,R30
0002f4 efaa      	LDI  R26,LOW(250)
0002f5 e0b0      	LDI  R27,0
0002f6 940e 05f8 	CALL _delay_ms
0002f8 c132      	RJMP _0x2000002
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 _displayLED7Seg:
                 ; .FSTART _displayLED7Seg
0002f9 93ba      	ST   -Y,R27
0002fa 93aa      	ST   -Y,R26
                 ;	number -> Y+0
0002fb 81a8      	LD   R26,Y
0002fc 81b9      	LDD  R27,Y+1
0002fd eee8      	LDI  R30,LOW(1000)
0002fe e0f3      	LDI  R31,HIGH(1000)
0002ff 940e 071f 	CALL __DIVW21U
000301 5fea      	SUBI R30,LOW(-_SegCode)
000302 4ffa      	SBCI R31,HIGH(-_SegCode)
000303 81e0      	LD   R30,Z
000304 93e0 1107 	STS  4359,R30
000306 81a8      	LD   R26,Y
000307 81b9      	LDD  R27,Y+1
000308 e6e4      	LDI  R30,LOW(100)
000309 e0f0      	LDI  R31,HIGH(100)
00030a d2a4      	RCALL SUBOPT_0x0
00030b 93e0 1106 	STS  4358,R30
00030d 81a8      	LD   R26,Y
00030e 81b9      	LDD  R27,Y+1
00030f e0ea      	LDI  R30,LOW(10)
000310 e0f0      	LDI  R31,HIGH(10)
000311 d29d      	RCALL SUBOPT_0x0
000312 93e0 1105 	STS  4357,R30
000314 81a8      	LD   R26,Y
000315 81b9      	LDD  R27,Y+1
000316 e0ea      	LDI  R30,LOW(10)
000317 e0f0      	LDI  R31,HIGH(10)
000318 940e 0732 	CALL __MODW21U
00031a 5fea      	SUBI R30,LOW(-_SegCode)
00031b 4ffa      	SBCI R31,HIGH(-_SegCode)
00031c 81e0      	LD   R30,Z
00031d 93e0 1104 	STS  4356,R30
00031f c1cc      	RJMP _0x2000001
                 ; .FEND
                 ;	number -> Y+0
                 _offLED7Seg:
                 ; .FSTART _offLED7Seg
000320 efef      	LDI  R30,LOW(255)
000321 93e0 1107 	STS  4359,R30
000323 93e0 1106 	STS  4358,R30
000325 93e0 1105 	STS  4357,R30
000327 93e0 1104 	STS  4356,R30
000329 93e0 1109 	STS  4361,R30
00032b 93e0 1109 	STS  4361,R30
00032d 93e0 1109 	STS  4361,R30
00032f 93e0 1109 	STS  4361,R30
000331 9508      	RET
                 ; .FEND
                 _LCD_WR_CMD:
                 ; .FSTART _LCD_WR_CMD
000332 93aa      	ST   -Y,R26
                 ;	cmd -> Y+0
000333 81e8      	LD   R30,Y
000334 93e0 110e 	STS  4366,R30
000336 d283      	RCALL SUBOPT_0x1
000337 e0a1      	LDI  R26,LOW(1)
000338 e0b0      	LDI  R27,0
000339 940e 05f8 	CALL _delay_ms
00033b c06c      	RJMP _0x2000004
                 ; .FEND
                 _LCD_WR_DATA:
                 ; .FSTART _LCD_WR_DATA
00033c 93aa      	ST   -Y,R26
                 ;	data -> Y+0
00033d 81e8      	LD   R30,Y
00033e 93e0 110d 	STS  4365,R30
000340 d279      	RCALL SUBOPT_0x1
000341 c066      	RJMP _0x2000004
                 ; .FEND
                 _LCD_INIT:
                 ; .FSTART _LCD_INIT
000342 e3a8      	LDI  R26,LOW(56)
000343 dfee      	RCALL _LCD_WR_CMD
000344 e0ac      	LDI  R26,LOW(12)
000345 dfec      	RCALL _LCD_WR_CMD
000346 e0a6      	LDI  R26,LOW(6)
000347 dfea      	RCALL _LCD_WR_CMD
                 ; .FEND
                 _LCD_CLEAR:
                 ; .FSTART _LCD_CLEAR
                 _0x2000005:
000348 e0a1      	LDI  R26,LOW(1)
000349 dfe8      	RCALL _LCD_WR_CMD
00034a 9508      	RET
                 ; .FEND
                 _Print:
                 ; .FSTART _Print
00034b 93ba      	ST   -Y,R27
00034c 93aa      	ST   -Y,R26
                 ;	*string -> Y+4
                 ;	row -> Y+2
                 ;	column -> Y+0
00034d 81ea      	LDD  R30,Y+2
00034e 81fb      	LDD  R31,Y+2+1
00034f 9730      	SBIW R30,0
000350 f419      	BRNE _0xA
000351 81a8      	LD   R26,Y
000352 58a0      	SUBI R26,-LOW(128)
000353 c014      	RJMP _0x85
                 _0xA:
000354 30e1      	CPI  R30,LOW(0x1)
000355 e0a0      	LDI  R26,HIGH(0x1)
000356 07fa      	CPC  R31,R26
000357 f419      	BRNE _0xB
000358 81a8      	LD   R26,Y
000359 54a0      	SUBI R26,-LOW(192)
00035a c00d      	RJMP _0x85
                 _0xB:
00035b 30e2      	CPI  R30,LOW(0x2)
00035c e0a0      	LDI  R26,HIGH(0x2)
00035d 07fa      	CPC  R31,R26
00035e f419      	BRNE _0xC
00035f 81a8      	LD   R26,Y
000360 56ac      	SUBI R26,-LOW(148)
000361 c006      	RJMP _0x85
                 _0xC:
000362 30e3      	CPI  R30,LOW(0x3)
000363 e0a0      	LDI  R26,HIGH(0x3)
000364 07fa      	CPC  R31,R26
000365 f419      	BRNE _0x9
000366 81a8      	LD   R26,Y
000367 52ac      	SUBI R26,-LOW(212)
                 _0x85:
000368 dfc9      	RCALL _LCD_WR_CMD
                 _0x9:
                 _0xE:
000369 81ac      	LDD  R26,Y+4
00036a 81bd      	LDD  R27,Y+4+1
00036b 91ec      	LD   R30,X
00036c 30e0      	CPI  R30,0
00036d f031      	BREQ _0x10
00036e 91ed      	LD   R30,X+
00036f 83ac      	STD  Y+4,R26
000370 83bd      	STD  Y+4+1,R27
000371 2fae      	MOV  R26,R30
000372 dfc9      	RCALL _LCD_WR_DATA
000373 cff5      	RJMP _0xE
                 _0x10:
000374 9626      	ADIW R28,6
000375 9508      	RET
                 ; .FEND
                 _OneWireReset:
                 ; .FSTART _OneWireReset
000376 931a      	ST   -Y,R17
                 ;	status -> R17
000377 9ab8      	SBI  0x17,0
000378 98c0      	CBI  0x18,0
                +
000379 ec80     +LDI R24 , LOW ( 960 )
00037a e093     +LDI R25 , HIGH ( 960 )
                +__DELAY_USW_LOOP :
00037b 9701     +SBIW R24 , 1
00037c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 960
00037d 98b8      	CBI  0x17,0
                +
00037e eb8b     +LDI R24 , LOW ( 187 )
                +__DELAY_USB_LOOP :
00037f 958a     +DEC R24
000380 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 187
000381 b3e6      	IN   R30,0x16
000382 70e1      	ANDI R30,LOW(0x1)
000383 2f1e      	MOV  R17,R30
                +
000384 e384     +LDI R24 , LOW ( 820 )
000385 e093     +LDI R25 , HIGH ( 820 )
                +__DELAY_USW_LOOP :
000386 9701     +SBIW R24 , 1
000387 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 820
000388 c041      	RJMP _0x2000003
                 ; .FEND
                 _OneWireWriteByte:
                 ; .FSTART _OneWireWriteByte
000389 93aa      	ST   -Y,R26
                 ;	Byte -> Y+0
00038a 2444      	CLR  R4
00038b 2455      	CLR  R5
                 _0x12:
00038c e0e8      	LDI  R30,LOW(8)
00038d e0f0      	LDI  R31,HIGH(8)
00038e 164e      	CP   R4,R30
00038f 065f      	CPC  R5,R31
000390 f4bc      	BRGE _0x13
000391 9ab8      	SBI  0x17,0
000392 98c0      	CBI  0x18,0
000393 81e8      	LD   R30,Y
000394 70e1      	ANDI R30,LOW(0x1)
000395 f021      	BREQ _0x14
                +
000396 e288     +LDI R24 , LOW ( 40 )
                +__DELAY_USB_LOOP :
000397 958a     +DEC R24
000398 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 40
000399 c003      	RJMP _0x15
                 _0x14:
                +
00039a ea80     +LDI R24 , LOW ( 160 )
                +__DELAY_USB_LOOP :
00039b 958a     +DEC R24
00039c f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 160
                 _0x15:
00039d 98b8      	CBI  0x17,0
                +
00039e e580     +LDI R24 , LOW ( 80 )
                +__DELAY_USB_LOOP :
00039f 958a     +DEC R24
0003a0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 80
0003a1 81e8      	LD   R30,Y
0003a2 95e6      	LSR  R30
0003a3 83e8      	ST   Y,R30
0003a4 01f2      	MOVW R30,R4
0003a5 9631      	ADIW R30,1
0003a6 012f      	MOVW R4,R30
0003a7 cfe4      	RJMP _0x12
                 _0x13:
                 _0x2000004:
0003a8 9621      	ADIW R28,1
0003a9 9508      	RET
                 ; .FEND
                 _OneWireReadByte:
                 ; .FSTART _OneWireReadByte
0003aa 931a      	ST   -Y,R17
                 ;	Byte -> R17
0003ab e010      	LDI  R17,0
0003ac 2444      	CLR  R4
0003ad 2455      	CLR  R5
                 _0x17:
0003ae e0e8      	LDI  R30,LOW(8)
0003af e0f0      	LDI  R31,HIGH(8)
0003b0 164e      	CP   R4,R30
0003b1 065f      	CPC  R5,R31
0003b2 f4bc      	BRGE _0x18
0003b3 9ab8      	SBI  0x17,0
0003b4 98c0      	CBI  0x18,0
                +
0003b5 e288     +LDI R24 , LOW ( 40 )
                +__DELAY_USB_LOOP :
0003b6 958a     +DEC R24
0003b7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 40
0003b8 98b8      	CBI  0x17,0
                +
0003b9 e288     +LDI R24 , LOW ( 40 )
                +__DELAY_USB_LOOP :
0003ba 958a     +DEC R24
0003bb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 40
0003bc 9516      	LSR  R17
0003bd b3e6      	IN   R30,0x16
0003be 70e1      	ANDI R30,LOW(0x1)
0003bf 95e7      	ROR  R30
0003c0 e0e0      	LDI  R30,0
0003c1 95e7      	ROR  R30
0003c2 2b1e      	OR   R17,R30
                +
0003c3 e580     +LDI R24 , LOW ( 80 )
                +__DELAY_USB_LOOP :
0003c4 958a     +DEC R24
0003c5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 80
0003c6 01f2      	MOVW R30,R4
0003c7 9631      	ADIW R30,1
0003c8 012f      	MOVW R4,R30
0003c9 cfe4      	RJMP _0x17
                 _0x18:
                 _0x2000003:
0003ca 2fe1      	MOV  R30,R17
0003cb 9119      	LD   R17,Y+
0003cc 9508      	RET
                 ; .FEND
                 _readTemp:
                 ; .FSTART _readTemp
0003cd 9722      	SBIW R28,2
                 ;	data -> Y+0
0003ce dfa7      	RCALL _OneWireReset
0003cf 30e0      	CPI  R30,0
0003d0 f551      	BRNE _0x19
0003d1 ecac      	LDI  R26,LOW(204)
0003d2 dfb6      	RCALL _OneWireWriteByte
0003d3 e4a4      	LDI  R26,LOW(68)
0003d4 dfb4      	RCALL _OneWireWriteByte
0003d5 98b8      	CBI  0x17,0
0003d6 eeae      	LDI  R26,LOW(750)
0003d7 e0b2      	LDI  R27,HIGH(750)
0003d8 940e 05f8 	CALL _delay_ms
0003da df9b      	RCALL _OneWireReset
0003db 83e8      	ST   Y,R30
0003dc ecac      	LDI  R26,LOW(204)
0003dd dfab      	RCALL _OneWireWriteByte
0003de ebae      	LDI  R26,LOW(190)
0003df dfa9      	RCALL _OneWireWriteByte
0003e0 dfc9      	RCALL _OneWireReadByte
0003e1 83e8      	ST   Y,R30
0003e2 dfc7      	RCALL _OneWireReadByte
0003e3 83e9      	STD  Y+1,R30
0003e4 8168      	LDD  R22,Y+0
0003e5 2777      	CLR  R23
0003e6 81a9      	LDD  R26,Y+1
0003e7 e0b0      	LDI  R27,0
0003e8 e0e0      	LDI  R30,LOW(256)
0003e9 e0f1      	LDI  R31,HIGH(256)
0003ea 940e 071a 	CALL __MULW12
0003ec 0fe6      	ADD  R30,R22
0003ed 1ff7      	ADC  R31,R23
0003ee 940e 070d 	CALL __CWD1
0003f0 940e 0668 	CALL __CDF1
                +
0003f2 e0a0     +LDI R26 , LOW ( 0x3D800000 )
0003f3 e0b0     +LDI R27 , HIGH ( 0x3D800000 )
0003f4 e880     +LDI R24 , BYTE3 ( 0x3D800000 )
0003f5 e39d     +LDI R25 , BYTE4 ( 0x3D800000 )
                 	__GETD2N 0x3D800000
0003f6 940e 0696 	CALL __MULF12
0003f8 940e 062f 	CALL __CFD1U
0003fa c0f1      	RJMP _0x2000001
                 _0x19:
0003fb e0e0      	LDI  R30,LOW(0)
0003fc e0f0      	LDI  R31,HIGH(0)
0003fd c0ee      	RJMP _0x2000001
                 ; .FEND
                 _showMenu:
                 ; .FSTART _showMenu
0003fe 93ba      	ST   -Y,R27
0003ff 93aa      	ST   -Y,R26
                 ;	*yourMenu -> Y+2
                 ;	selectRow -> Y+0
000400 81ea      	LDD  R30,Y+2
000401 81fb      	LDD  R31,Y+2+1
000402 9632      	ADIW R30,2
000403 93fa      	ST   -Y,R31
000404 93ea      	ST   -Y,R30
000405 e0e0      	LDI  R30,LOW(0)
000406 e0f0      	LDI  R31,HIGH(0)
000407 93fa      	ST   -Y,R31
000408 93ea      	ST   -Y,R30
000409 e0a6      	LDI  R26,LOW(6)
00040a d1be      	RCALL SUBOPT_0x2
00040b 9678      	ADIW R30,24
00040c 93fa      	ST   -Y,R31
00040d 93ea      	ST   -Y,R30
00040e e0e1      	LDI  R30,LOW(1)
00040f e0f0      	LDI  R31,HIGH(1)
000410 93fa      	ST   -Y,R31
000411 93ea      	ST   -Y,R30
000412 e0a0      	LDI  R26,LOW(0)
000413 d1b5      	RCALL SUBOPT_0x2
000414 96be      	ADIW R30,46
000415 93fa      	ST   -Y,R31
000416 93ea      	ST   -Y,R30
000417 e0e2      	LDI  R30,LOW(2)
000418 e0f0      	LDI  R31,HIGH(2)
000419 93fa      	ST   -Y,R31
00041a 93ea      	ST   -Y,R30
00041b e0a0      	LDI  R26,LOW(0)
00041c d1ac      	RCALL SUBOPT_0x2
00041d 5bec      	SUBI R30,LOW(-68)
00041e 4fff      	SBCI R31,HIGH(-68)
00041f 93fa      	ST   -Y,R31
000420 93ea      	ST   -Y,R30
000421 e0e3      	LDI  R30,LOW(3)
000422 e0f0      	LDI  R31,HIGH(3)
000423 d1aa      	RCALL SUBOPT_0x3
                +
000424 e0e0     +LDI R30 , LOW ( _0x1A + ( 0 ) )
000425 e0f5     +LDI R31 , HIGH ( _0x1A + ( 0 ) )
                 	__POINTW1MN _0x1A,0
000426 93fa      	ST   -Y,R31
000427 93ea      	ST   -Y,R30
000428 81ea      	LDD  R30,Y+2
000429 81fb      	LDD  R31,Y+2+1
00042a d1a3      	RCALL SUBOPT_0x3
                 _0x2000002:
00042b 9624      	ADIW R28,4
00042c 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _0x1A:
000500           	.BYTE 0x2
                 
                 	.CSEG
                 _ctrlDevice:
                 ; .FSTART _ctrlDevice
00042d 93aa      	ST   -Y,R26
                 ;	device -> Y+1
                 ;	mode -> Y+0
00042e 81a9      	LDD  R26,Y+1
00042f 31a5      	CPI  R26,LOW(0x15)
000430 f5c9      	BRNE _0x1B
000431 d1a1      	RCALL SUBOPT_0x4
000432 f429      	BRNE _0x1F
                +
000433 e5a5     +LDI R26 , LOW ( 0x55555555 )
000434 e5b5     +LDI R27 , HIGH ( 0x55555555 )
000435 e585     +LDI R24 , BYTE3 ( 0x55555555 )
000436 e595     +LDI R25 , BYTE4 ( 0x55555555 )
                 	__GETD2N 0x55555555
000437 c030      	RJMP _0x86
                 _0x1F:
000438 30e2      	CPI  R30,LOW(0x2)
000439 e0a0      	LDI  R26,HIGH(0x2)
00043a 07fa      	CPC  R31,R26
00043b f521      	BRNE _0x20
00043c 2444      	CLR  R4
00043d 2455      	CLR  R5
                 _0x22:
00043e e2e0      	LDI  R30,LOW(32)
00043f e0f0      	LDI  R31,HIGH(32)
000440 164e      	CP   R4,R30
000441 065f      	CPC  R5,R31
000442 f4e4      	BRGE _0x23
000443 2de4      	MOV  R30,R4
                +
000444 e0a1     +LDI R26 , LOW ( 0x1 )
000445 e0b0     +LDI R27 , HIGH ( 0x1 )
000446 e080     +LDI R24 , BYTE3 ( 0x1 )
000447 e090     +LDI R25 , BYTE4 ( 0x1 )
                 	__GETD2N 0x1
000448 940e 06f0 	CALL __LSLD12
00044a 93e0 0502 	STS  _modeLED,R30
00044c 93f0 0503 	STS  _modeLED+1,R31
00044e 9360 0504 	STS  _modeLED+2,R22
000450 9370 0505 	STS  _modeLED+3,R23
000452 91a0 0502 	LDS  R26,_modeLED
000454 91b0 0503 	LDS  R27,_modeLED+1
000456 9180 0504 	LDS  R24,_modeLED+2
000458 9190 0505 	LDS  R25,_modeLED+3
00045a de82      	RCALL _displayLEDs
00045b 01f2      	MOVW R30,R4
00045c 9631      	ADIW R30,1
00045d 012f      	MOVW R4,R30
00045e cfdf      	RJMP _0x22
                 _0x23:
00045f c009      	RJMP _0x1E
                 _0x20:
000460 30e3      	CPI  R30,LOW(0x3)
000461 e0a0      	LDI  R26,HIGH(0x3)
000462 07fa      	CPC  R31,R26
000463 f429      	BRNE _0x1E
                +
000464 e0a0     +LDI R26 , LOW ( 0x0 )
000465 e0b0     +LDI R27 , HIGH ( 0x0 )
000466 e080     +LDI R24 , BYTE3 ( 0x0 )
000467 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
                 _0x86:
000468 de74      	RCALL _displayLEDs
                 _0x1E:
000469 c082      	RJMP _0x25
                 _0x1B:
00046a 81a9      	LDD  R26,Y+1
00046b 31a6      	CPI  R26,LOW(0x16)
00046c f461      	BRNE _0x26
00046d d165      	RCALL SUBOPT_0x4
00046e f421      	BRNE _0x2A
00046f e4a0      	LDI  R26,LOW(2112)
000470 e0b8      	LDI  R27,HIGH(2112)
000471 de87      	RCALL _displayLED7Seg
000472 c005      	RJMP _0x29
                 _0x2A:
000473 30e2      	CPI  R30,LOW(0x2)
000474 e0a0      	LDI  R26,HIGH(0x2)
000475 07fa      	CPC  R31,R26
000476 f409      	BRNE _0x29
000477 dea8      	RCALL _offLED7Seg
                 _0x29:
000478 c073      	RJMP _0x2C
                 _0x26:
000479 81a9      	LDD  R26,Y+1
00047a 31a7      	CPI  R26,LOW(0x17)
00047b f531      	BRNE _0x2D
00047c d156      	RCALL SUBOPT_0x4
00047d f411      	BRNE _0x31
00047e efef      	LDI  R30,LOW(255)
00047f c01b      	RJMP _0x87
                 _0x31:
000480 30e2      	CPI  R30,LOW(0x2)
000481 e0a0      	LDI  R26,HIGH(0x2)
000482 07fa      	CPC  R31,R26
000483 f411      	BRNE _0x32
000484 e0e0      	LDI  R30,LOW(0)
000485 c015      	RJMP _0x87
                 _0x32:
000486 30e3      	CPI  R30,LOW(0x3)
000487 e0a0      	LDI  R26,HIGH(0x3)
000488 07fa      	CPC  R31,R26
000489 f499      	BRNE _0x30
00048a 91e0 0510 	LDS  R30,_ctrlRelays
00048c 77ef      	ANDI R30,0x7F
00048d d14b      	RCALL SUBOPT_0x5
00048e 7bef      	ANDI R30,0xBF
00048f d149      	RCALL SUBOPT_0x5
000490 7def      	ANDI R30,0xDF
000491 d147      	RCALL SUBOPT_0x5
000492 7eef      	ANDI R30,0xEF
000493 d145      	RCALL SUBOPT_0x5
000494 7fe7      	ANDI R30,0XF7
000495 d143      	RCALL SUBOPT_0x5
000496 7feb      	ANDI R30,0xFB
000497 d141      	RCALL SUBOPT_0x5
000498 7fed      	ANDI R30,0xFD
000499 d13f      	RCALL SUBOPT_0x5
00049a 7fee      	ANDI R30,0xFE
                 _0x87:
00049b 93e0 0510 	STS  _ctrlRelays,R30
                 _0x30:
00049d 91e0 0510 	LDS  R30,_ctrlRelays
00049f 93e0 110a 	STS  4362,R30
0004a1 c04a      	RJMP _0x34
                 _0x2D:
0004a2 81a9      	LDD  R26,Y+1
0004a3 31a8      	CPI  R26,LOW(0x18)
0004a4 f4d9      	BRNE _0x35
0004a5 d12d      	RCALL SUBOPT_0x4
0004a6 f429      	BRNE _0x39
0004a7 91e0 0511 	LDS  R30,_ctrlMotors
0004a9 7fec      	ANDI R30,LOW(0xFC)
0004aa 60e1      	ORI  R30,1
0004ab c010      	RJMP _0x88
                 _0x39:
0004ac 30e2      	CPI  R30,LOW(0x2)
0004ad e0a0      	LDI  R26,HIGH(0x2)
0004ae 07fa      	CPC  R31,R26
0004af f429      	BRNE _0x3A
0004b0 91e0 0511 	LDS  R30,_ctrlMotors
0004b2 7fec      	ANDI R30,LOW(0xFC)
0004b3 60e2      	ORI  R30,2
0004b4 c007      	RJMP _0x88
                 _0x3A:
0004b5 30e3      	CPI  R30,LOW(0x3)
0004b6 e0a0      	LDI  R26,HIGH(0x3)
0004b7 07fa      	CPC  R31,R26
0004b8 f429      	BRNE _0x38
0004b9 91e0 0511 	LDS  R30,_ctrlMotors
0004bb 7fec      	ANDI R30,LOW(0xFC)
                 _0x88:
0004bc 93e0 0511 	STS  _ctrlMotors,R30
                 _0x38:
0004be d125      	RCALL SUBOPT_0x6
0004bf c02c      	RJMP _0x3C
                 _0x35:
0004c0 81a9      	LDD  R26,Y+1
0004c1 31a9      	CPI  R26,LOW(0x19)
0004c2 f4d9      	BRNE _0x3D
0004c3 d10f      	RCALL SUBOPT_0x4
0004c4 f429      	BRNE _0x41
0004c5 91e0 0511 	LDS  R30,_ctrlMotors
0004c7 7fe3      	ANDI R30,LOW(0xF3)
0004c8 60e4      	ORI  R30,4
0004c9 c010      	RJMP _0x89
                 _0x41:
0004ca 30e2      	CPI  R30,LOW(0x2)
0004cb e0a0      	LDI  R26,HIGH(0x2)
0004cc 07fa      	CPC  R31,R26
0004cd f429      	BRNE _0x42
0004ce 91e0 0511 	LDS  R30,_ctrlMotors
0004d0 7fe3      	ANDI R30,LOW(0xF3)
0004d1 60e8      	ORI  R30,8
0004d2 c007      	RJMP _0x89
                 _0x42:
0004d3 30e3      	CPI  R30,LOW(0x3)
0004d4 e0a0      	LDI  R26,HIGH(0x3)
0004d5 07fa      	CPC  R31,R26
0004d6 f429      	BRNE _0x40
0004d7 91e0 0511 	LDS  R30,_ctrlMotors
0004d9 7fe3      	ANDI R30,LOW(0xF3)
                 _0x89:
0004da 93e0 0511 	STS  _ctrlMotors,R30
                 _0x40:
0004dc d107      	RCALL SUBOPT_0x6
0004dd c00e      	RJMP _0x44
                 _0x3D:
0004de 81a9      	LDD  R26,Y+1
0004df 31aa      	CPI  R26,LOW(0x1A)
0004e0 f459      	BRNE _0x45
0004e1 d0f1      	RCALL SUBOPT_0x4
0004e2 f421      	BRNE _0x49
0004e3 dee9      	RCALL _readTemp
0004e4 01df      	MOVW R26,R30
0004e5 de13      	RCALL _displayLED7Seg
0004e6 c005      	RJMP _0x48
                 _0x49:
0004e7 30e2      	CPI  R30,LOW(0x2)
0004e8 e0a0      	LDI  R26,HIGH(0x2)
0004e9 07fa      	CPC  R31,R26
0004ea f409      	BRNE _0x48
0004eb de34      	RCALL _offLED7Seg
                 _0x48:
                 _0x45:
                 _0x44:
                 _0x3C:
                 _0x34:
                 _0x2C:
                 _0x25:
                 _0x2000001:
0004ec 9622      	ADIW R28,2
0004ed 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 ;
                 ;
                 ;
                 ;MENU* pmenu;
                 ;int selectRow = 1;
                 ;int temp;
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0015 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0016     MCUCR |= 0x80;      // writing SRE to one enables the External Memory Interface
0004ee b7e5      	IN   R30,0x35
0004ef 68e0      	ORI  R30,0x80
0004f0 bfe5      	OUT  0x35,R30
                 ; 0000 0017     XMCRA = 0;          // External Memory Control Register A
0004f1 e0e0      	LDI  R30,LOW(0)
0004f2 93e0 006d 	STS  109,R30
                 ; 0000 0018 
                 ; 0000 0019     /*-------------------Initial LED 7SEG--------------------------*/
                 ; 0000 001A     offLED7Seg();
0004f4 de2b      	RCALL _offLED7Seg
                 ; 0000 001B 
                 ; 0000 001C     /*-------------------Initial Motors--------------------------------*/
                 ; 0000 001D     ctrlMotors.DC1 = StopRotate;
0004f5 91e0 0511 	LDS  R30,_ctrlMotors
0004f7 7fec      	ANDI R30,LOW(0xFC)
0004f8 93e0 0511 	STS  _ctrlMotors,R30
                 ; 0000 001E     ctrlMotors.DC2 = StopRotate;
0004fa 7fe3      	ANDI R30,LOW(0xF3)
0004fb 93e0 0511 	STS  _ctrlMotors,R30
                 ; 0000 001F     MOTOR_ACTIVATION;
0004fd d0e6      	RCALL SUBOPT_0x6
                 ; 0000 0020 
                 ; 0000 0021     /*--------------------Initial LCD-----------------------------------*/
                 ; 0000 0022     DDRG |= (1<<3);     // output LCD enable
0004fe 91e0 0064 	LDS  R30,100
000500 60e8      	ORI  R30,8
000501 93e0 0064 	STS  100,R30
                 ; 0000 0023     LCD_INIT();
000503 de3e      	RCALL _LCD_INIT
                 ; 0000 0024 
                 ; 0000 0025     /*----------------Initial Main Menu on LCD-----------------------------*/
                 ; 0000 0026     pmenu = &MainMenu;
000504 e1e3      	LDI  R30,LOW(_MainMenu)
000505 e0f5      	LDI  R31,HIGH(_MainMenu)
000506 013f      	MOVW R6,R30
                 ; 0000 0027     showMenu(pmenu, selectRow);
000507 d0e1      	RCALL SUBOPT_0x7
                 ; 0000 0028 
                 ; 0000 0029     /*----------------Initial DS18B20-----------------------------*/
                 ; 0000 002A     /*if (!OneWireReset()) {        // test -> 0040
                 ; 0000 002B         OneWireWriteByte(0x33);
                 ; 0000 002C         displayLED7Seg(OneWireReadByte());
                 ; 0000 002D     }*/
                 ; 0000 002E 
                 ; 0000 002F 
                 ; 0000 0030     while (1)
                 _0x58:
                 ; 0000 0031     {
                 ; 0000 0032         /*-------------------Control motors by btns --------------------*/
                 ; 0000 0033         /* READ_KEY;
                 ; 0000 0034         if (!ctrlBtns.STOP) {
                 ; 0000 0035             while (!ctrlBtns.STOP)      // debounce button
                 ; 0000 0036                 READ_KEY;
                 ; 0000 0037             ctrlMotors.DC1 = StopRotate;
                 ; 0000 0038             ctrlMotors.DC2 = StopRotate;
                 ; 0000 0039         }
                 ; 0000 003A         else if (!ctrlBtns.FORWARD) {
                 ; 0000 003B             while (!ctrlBtns.FORWARD)
                 ; 0000 003C                 READ_KEY;
                 ; 0000 003D             ctrlMotors.DC1 = RotateForward;
                 ; 0000 003E             ctrlMotors.DC2 = RotateForward;
                 ; 0000 003F         }
                 ; 0000 0040         else if (!ctrlBtns.BACKWARD) {
                 ; 0000 0041             while (!ctrlBtns.BACKWARD)
                 ; 0000 0042                 READ_KEY;
                 ; 0000 0043             ctrlMotors.DC1 = RotateBackward;
                 ; 0000 0044             ctrlMotors.DC2 = RotateBackward;
                 ; 0000 0045         }
                 ; 0000 0046         MOTOR_ACTIVATION; */
                 ; 0000 0047 
                 ; 0000 0048         /*---------------------Control devices by Menu on LCD----------------------*/
                 ; 0000 0049         READ_KEY;
000508 d0e4      	RCALL SUBOPT_0x8
                 ; 0000 004A         if (!ctrlBtns.UP) {
000509 91e0 0512 	LDS  R30,_ctrlBtns
00050b 70e4      	ANDI R30,LOW(0x4)
00050c f499      	BRNE _0x5B
                 ; 0000 004B             while (!ctrlBtns.UP)
                 _0x5C:
00050d 91e0 0512 	LDS  R30,_ctrlBtns
00050f 70e4      	ANDI R30,LOW(0x4)
000510 f411      	BRNE _0x5E
                 ; 0000 004C                 READ_KEY;
000511 d0db      	RCALL SUBOPT_0x8
000512 cffa      	RJMP _0x5C
                 _0x5E:
                 ; 0000 004D selectRow = (selectRow == 1) ? 3 : (selectRow - 1);
000513 e0e1      	LDI  R30,LOW(1)
000514 e0f0      	LDI  R31,HIGH(1)
000515 15e8      	CP   R30,R8
000516 05f9      	CPC  R31,R9
000517 f419      	BRNE _0x5F
000518 e0e3      	LDI  R30,LOW(3)
000519 e0f0      	LDI  R31,HIGH(3)
00051a c002      	RJMP _0x60
                 _0x5F:
00051b 01f4      	MOVW R30,R8
00051c 9731      	SBIW R30,1
                 _0x60:
00051d 014f      	MOVW R8,R30
                 ; 0000 004E             showMenu(pmenu, selectRow);
00051e d0ca      	RCALL SUBOPT_0x7
                 ; 0000 004F         }
                 ; 0000 0050         else if (!ctrlBtns.DOWN) {
00051f c08d      	RJMP _0x62
                 _0x5B:
000520 91e0 0512 	LDS  R30,_ctrlBtns
000522 71e0      	ANDI R30,LOW(0x10)
000523 f499      	BRNE _0x63
                 ; 0000 0051             while (!ctrlBtns.DOWN)
                 _0x64:
000524 91e0 0512 	LDS  R30,_ctrlBtns
000526 71e0      	ANDI R30,LOW(0x10)
000527 f411      	BRNE _0x66
                 ; 0000 0052                 READ_KEY;
000528 d0c4      	RCALL SUBOPT_0x8
000529 cffa      	RJMP _0x64
                 _0x66:
                 ; 0000 0053 selectRow = (selectRow == 3) ? 1 : (selectRow + 1);
00052a e0e3      	LDI  R30,LOW(3)
00052b e0f0      	LDI  R31,HIGH(3)
00052c 15e8      	CP   R30,R8
00052d 05f9      	CPC  R31,R9
00052e f419      	BRNE _0x67
00052f e0e1      	LDI  R30,LOW(1)
000530 e0f0      	LDI  R31,HIGH(1)
000531 c002      	RJMP _0x68
                 _0x67:
000532 01f4      	MOVW R30,R8
000533 9631      	ADIW R30,1
                 _0x68:
000534 014f      	MOVW R8,R30
                 ; 0000 0054             showMenu(pmenu, selectRow);
000535 d0b3      	RCALL SUBOPT_0x7
                 ; 0000 0055         }
                 ; 0000 0056         else if (!ctrlBtns.NEXT) {
000536 c076      	RJMP _0x6A
                 _0x63:
000537 91e0 0512 	LDS  R30,_ctrlBtns
000539 70e8      	ANDI R30,LOW(0x8)
00053a f5c1      	BRNE _0x6B
                 ; 0000 0057             while (!ctrlBtns.NEXT)
                 _0x6C:
00053b 91e0 0512 	LDS  R30,_ctrlBtns
00053d 70e8      	ANDI R30,LOW(0x8)
00053e f411      	BRNE _0x6E
                 ; 0000 0058                 READ_KEY;
00053f d0ad      	RCALL SUBOPT_0x8
000540 cffa      	RJMP _0x6C
                 _0x6E:
                 ; 0000 0059 switch(selectRow) {
000541 01f4      	MOVW R30,R8
                 ; 0000 005A                 case 1:
000542 30e1      	CPI  R30,LOW(0x1)
000543 e0a0      	LDI  R26,HIGH(0x1)
000544 07fa      	CPC  R31,R26
000545 f459      	BRNE _0x72
                 ; 0000 005B                     if (pmenu->nextMenu1 != NULL) {
000546 01d3      	MOVW R26,R6
000547 969c      	ADIW R26,44
000548 940e 0743 	CALL __GETW1P
00054a 9730      	SBIW R30,0
00054b f021      	BREQ _0x73
                 ; 0000 005C                         LCD_CLEAR();
00054c ddfb      	RCALL _LCD_CLEAR
                 ; 0000 005D                         pmenu = pmenu->nextMenu1;
00054d 01d3      	MOVW R26,R6
00054e 969c      	ADIW R26,44
00054f d0a2      	RCALL SUBOPT_0x9
                 ; 0000 005E                         selectRow = 1;
                 ; 0000 005F                         showMenu(pmenu, selectRow);
                 ; 0000 0060                     }
                 ; 0000 0061                     break;
                 _0x73:
000550 c021      	RJMP _0x71
                 ; 0000 0062                 case 2:
                 _0x72:
000551 30e2      	CPI  R30,LOW(0x2)
000552 e0a0      	LDI  R26,HIGH(0x2)
000553 07fa      	CPC  R31,R26
000554 f469      	BRNE _0x74
                 ; 0000 0063                     if (pmenu->nextMenu2 != NULL) {
000555 01d3      	MOVW R26,R6
000556 5bae      	SUBI R26,LOW(-66)
000557 4fbf      	SBCI R27,HIGH(-66)
000558 940e 0743 	CALL __GETW1P
00055a 9730      	SBIW R30,0
00055b f029      	BREQ _0x75
                 ; 0000 0064                         LCD_CLEAR();
00055c ddeb      	RCALL _LCD_CLEAR
                 ; 0000 0065                         pmenu = pmenu->nextMenu2;
00055d 01d3      	MOVW R26,R6
00055e 5bae      	SUBI R26,LOW(-66)
00055f 4fbf      	SBCI R27,HIGH(-66)
000560 d091      	RCALL SUBOPT_0x9
                 ; 0000 0066                         selectRow = 1;
                 ; 0000 0067                         showMenu(pmenu, selectRow);
                 ; 0000 0068                     }
                 ; 0000 0069 
                 ; 0000 006A                     break;
                 _0x75:
000561 c010      	RJMP _0x71
                 ; 0000 006B                 case 3:
                 _0x74:
000562 30e3      	CPI  R30,LOW(0x3)
000563 e0a0      	LDI  R26,HIGH(0x3)
000564 07fa      	CPC  R31,R26
000565 f461      	BRNE _0x71
                 ; 0000 006C                     if (pmenu->nextMenu3 != NULL) {
000566 01d3      	MOVW R26,R6
000567 5aa8      	SUBI R26,LOW(-88)
000568 4fbf      	SBCI R27,HIGH(-88)
000569 940e 0743 	CALL __GETW1P
00056b 9730      	SBIW R30,0
00056c f029      	BREQ _0x77
                 ; 0000 006D                         LCD_CLEAR();
00056d ddda      	RCALL _LCD_CLEAR
                 ; 0000 006E                         pmenu = pmenu->nextMenu3;
00056e 01d3      	MOVW R26,R6
00056f 5aa8      	SUBI R26,LOW(-88)
000570 4fbf      	SBCI R27,HIGH(-88)
000571 d080      	RCALL SUBOPT_0x9
                 ; 0000 006F                         selectRow = 1;
                 ; 0000 0070                         showMenu(pmenu, selectRow);
                 ; 0000 0071                     }
                 ; 0000 0072                     break;
                 _0x77:
                 ; 0000 0073             }
                 _0x71:
                 ; 0000 0074         }
                 ; 0000 0075         else if (!ctrlBtns.BACK) {
000572 c03a      	RJMP _0x78
                 _0x6B:
000573 91e0 0512 	LDS  R30,_ctrlBtns
000575 70e2      	ANDI R30,LOW(0x2)
000576 f4a9      	BRNE _0x79
                 ; 0000 0076             while (!ctrlBtns.BACK)
                 _0x7A:
000577 91e0 0512 	LDS  R30,_ctrlBtns
000579 70e2      	ANDI R30,LOW(0x2)
00057a f411      	BRNE _0x7C
                 ; 0000 0077                 READ_KEY;
00057b d071      	RCALL SUBOPT_0x8
00057c cffa      	RJMP _0x7A
                 _0x7C:
                 ; 0000 0078 if (pmenu->preMenu != 0) {
00057d 01d3      	MOVW R26,R6
00057e 940e 0743 	CALL __GETW1P
000580 9730      	SBIW R30,0
000581 f049      	BREQ _0x7D
                 ; 0000 0079                 LCD_CLEAR();
000582 ddc5      	RCALL _LCD_CLEAR
                 ; 0000 007A                 selectRow = pmenu->id;
000583 01d3      	MOVW R26,R6
000584 9656      	ADIW R26,22
000585 908d      	LD   R8,X+
000586 909c      	LD   R9,X
                 ; 0000 007B                 pmenu = pmenu->preMenu;
000587 01d3      	MOVW R26,R6
000588 906d      	LD   R6,X+
000589 907c      	LD   R7,X
                 ; 0000 007C                 showMenu(pmenu, selectRow);
00058a d05e      	RCALL SUBOPT_0x7
                 ; 0000 007D             }
                 ; 0000 007E         }
                 _0x7D:
                 ; 0000 007F         else if (!ctrlBtns.ENTER) {
00058b c021      	RJMP _0x7E
                 _0x79:
00058c 91e0 0512 	LDS  R30,_ctrlBtns
00058e 70e1      	ANDI R30,LOW(0x1)
00058f f4e9      	BRNE _0x7F
                 ; 0000 0080             while (!ctrlBtns.ENTER)
                 _0x80:
000590 91e0 0512 	LDS  R30,_ctrlBtns
000592 70e1      	ANDI R30,LOW(0x1)
000593 f411      	BRNE _0x82
                 ; 0000 0081                 READ_KEY;
000594 d058      	RCALL SUBOPT_0x8
000595 cffa      	RJMP _0x80
                 _0x82:
                 ; 0000 0082 if (pmenu->funcCtrl != 0) {
000596 01d3      	MOVW R26,R6
000597 5aa4      	SUBI R26,LOW(-92)
000598 4fbf      	SBCI R27,HIGH(-92)
000599 940e 0743 	CALL __GETW1P
00059b 9730      	SBIW R30,0
00059c f081      	BREQ _0x83
                 ; 0000 0083                 pmenu->funcCtrl(pmenu->device, selectRow);
00059d 01d3      	MOVW R26,R6
00059e 5aa4      	SUBI R26,LOW(-92)
00059f 4fbf      	SBCI R27,HIGH(-92)
0005a0 940e 0743 	CALL __GETW1P
0005a2 93ff      	PUSH R31
0005a3 93ef      	PUSH R30
0005a4 01d3      	MOVW R26,R6
0005a5 5aa6      	SUBI R26,LOW(-90)
0005a6 4fbf      	SBCI R27,HIGH(-90)
0005a7 91ec      	LD   R30,X
0005a8 93ea      	ST   -Y,R30
0005a9 2da8      	MOV  R26,R8
0005aa 91ef      	POP  R30
0005ab 91ff      	POP  R31
0005ac 9509      	ICALL
                 ; 0000 0084             }
                 ; 0000 0085         }
                 _0x83:
                 ; 0000 0086     }
                 _0x7F:
                 _0x7E:
                 _0x78:
                 _0x6A:
                 _0x62:
0005ad cf5a      	RJMP _0x58
                 ; 0000 0087 }
                 _0x84:
0005ae cfff      	RJMP _0x84
                 ; .FEND
                 
                 	.DSEG
                 _modeLED:
000502           	.BYTE 0x4
                 _SegCode:
000506           	.BYTE 0xA
                 _ctrlRelays:
000510           	.BYTE 0x1
                 _ctrlMotors:
000511           	.BYTE 0x1
                 _ctrlBtns:
000512           	.BYTE 0x1
                 _MainMenu:
000513           	.BYTE 0x5E
                 _SensorMenu:
000571           	.BYTE 0x5E
                 _ActuatorMenu:
0005cf           	.BYTE 0x5E
                 _SetMenu:
00062d           	.BYTE 0x5E
                 _TempMenu:
00068b           	.BYTE 0x5E
                 _HumiMenu:
0006e9           	.BYTE 0x5E
                 _RelayMenu:
000747           	.BYTE 0x5E
                 _MotorMenu:
0007a5           	.BYTE 0x5E
                 _LedMenu:
000803           	.BYTE 0x5E
                 _Motor1Menu:
000861           	.BYTE 0x5E
                 _Motor2Menu:
0008bf           	.BYTE 0x5E
                 _SingLedMenu:
00091d           	.BYTE 0x5E
                 _SevenSegLedMenu:
00097b           	.BYTE 0x5E
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
0005af 940e 071f 	CALL __DIVW21U
0005b1 01df      	MOVW R26,R30
0005b2 e0ea      	LDI  R30,LOW(10)
0005b3 e0f0      	LDI  R31,HIGH(10)
0005b4 940e 0732 	CALL __MODW21U
0005b6 5fea      	SUBI R30,LOW(-_SegCode)
0005b7 4ffa      	SBCI R31,HIGH(-_SegCode)
0005b8 81e0      	LD   R30,Z
0005b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
0005ba 91e0 0065 	LDS  R30,101
0005bc 60e8      	ORI  R30,8
0005bd 93e0 0065 	STS  101,R30
0005bf e0a1      	LDI  R26,LOW(1)
0005c0 e0b0      	LDI  R27,0
0005c1 940e 05f8 	CALL _delay_ms
0005c3 91e0 0065 	LDS  R30,101
0005c5 7fe7      	ANDI R30,0XF7
0005c6 93e0 0065 	STS  101,R30
0005c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0005c9 e0b0      	LDI  R27,0
0005ca dd80      	RCALL _Print
0005cb 81ea      	LDD  R30,Y+2
0005cc 81fb      	LDD  R31,Y+2+1
0005cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
0005ce 93fa      	ST   -Y,R31
0005cf 93ea      	ST   -Y,R30
0005d0 e0a0      	LDI  R26,LOW(0)
0005d1 e0b0      	LDI  R27,0
0005d2 cd78      	RJMP _Print
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x4:
0005d3 81e8      	LD   R30,Y
0005d4 e0f0      	LDI  R31,0
0005d5 30e1      	CPI  R30,LOW(0x1)
0005d6 e0a0      	LDI  R26,HIGH(0x1)
0005d7 07fa      	CPC  R31,R26
0005d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x5:
0005d9 93e0 0510 	STS  _ctrlRelays,R30
0005db 93e0 110a 	STS  4362,R30
0005dd efa4      	LDI  R26,LOW(500)
0005de e0b1      	LDI  R27,HIGH(500)
0005df 940e 05f8 	CALL _delay_ms
0005e1 91e0 0510 	LDS  R30,_ctrlRelays
0005e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6:
0005e4 91e0 0511 	LDS  R30,_ctrlMotors
0005e6 93e0 110b 	STS  4363,R30
0005e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x7:
0005e9 927a      	ST   -Y,R7
0005ea 926a      	ST   -Y,R6
0005eb 01d4      	MOVW R26,R8
0005ec ce11      	RJMP _showMenu
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8:
0005ed 91e0 110c 	LDS  R30,4364
0005ef 93e0 0512 	STS  _ctrlBtns,R30
0005f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
0005f2 906d      	LD   R6,X+
0005f3 907c      	LD   R7,X
0005f4 e0e1      	LDI  R30,LOW(1)
0005f5 e0f0      	LDI  R31,HIGH(1)
0005f6 014f      	MOVW R8,R30
0005f7 cff1      	RJMP SUBOPT_0x7
                 
                 
                 	.CSEG
                 _delay_ms:
0005f8 9610      	adiw r26,0
0005f9 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0005fa ed80     +LDI R24 , LOW ( 0x7D0 )
0005fb e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0005fc 9701     +SBIW R24 , 1
0005fd f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0005fe 95a8      	wdr
0005ff 9711      	sbiw r26,1
000600 f7c9      	brne __delay_ms0
                 __delay_ms1:
000601 9508      	ret
                 
                 __ROUND_REPACK:
000602 2355      	TST  R21
000603 f442      	BRPL __REPACK
000604 3850      	CPI  R21,0x80
000605 f411      	BRNE __ROUND_REPACK0
000606 ffe0      	SBRS R30,0
000607 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000608 9631      	ADIW R30,1
000609 1f69      	ADC  R22,R25
00060a 1f79      	ADC  R23,R25
00060b f06b      	BRVS __REPACK1
                 
                 __REPACK:
00060c e850      	LDI  R21,0x80
00060d 2757      	EOR  R21,R23
00060e f411      	BRNE __REPACK0
00060f 935f      	PUSH R21
000610 c073      	RJMP __ZERORES
                 __REPACK0:
000611 3f5f      	CPI  R21,0xFF
000612 f031      	BREQ __REPACK1
000613 0f66      	LSL  R22
000614 0c00      	LSL  R0
000615 9557      	ROR  R21
000616 9567      	ROR  R22
000617 2f75      	MOV  R23,R21
000618 9508      	RET
                 __REPACK1:
000619 935f      	PUSH R21
00061a 2000      	TST  R0
00061b f00a      	BRMI __REPACK2
00061c c073      	RJMP __MAXRES
                 __REPACK2:
00061d c06c      	RJMP __MINRES
                 
                 __UNPACK:
00061e e850      	LDI  R21,0x80
00061f 2e19      	MOV  R1,R25
000620 2215      	AND  R1,R21
000621 0f88      	LSL  R24
000622 1f99      	ROL  R25
000623 2795      	EOR  R25,R21
000624 0f55      	LSL  R21
000625 9587      	ROR  R24
                 
                 __UNPACK1:
000626 e850      	LDI  R21,0x80
000627 2e07      	MOV  R0,R23
000628 2205      	AND  R0,R21
000629 0f66      	LSL  R22
00062a 1f77      	ROL  R23
00062b 2775      	EOR  R23,R21
00062c 0f55      	LSL  R21
00062d 9567      	ROR  R22
00062e 9508      	RET
                 
                 __CFD1U:
00062f 9468      	SET
000630 c001      	RJMP __CFD1U0
                 __CFD1:
000631 94e8      	CLT
                 __CFD1U0:
000632 935f      	PUSH R21
000633 dff2      	RCALL __UNPACK1
000634 3870      	CPI  R23,0x80
000635 f018      	BRLO __CFD10
000636 3f7f      	CPI  R23,0xFF
000637 f408      	BRCC __CFD10
000638 c04b      	RJMP __ZERORES
                 __CFD10:
000639 e156      	LDI  R21,22
00063a 1b57      	SUB  R21,R23
00063b f4aa      	BRPL __CFD11
00063c 9551      	NEG  R21
00063d 3058      	CPI  R21,8
00063e f40e      	BRTC __CFD19
00063f 3059      	CPI  R21,9
                 __CFD19:
000640 f030      	BRLO __CFD17
000641 efef      	SER  R30
000642 efff      	SER  R31
000643 ef6f      	SER  R22
000644 e77f      	LDI  R23,0x7F
000645 f977      	BLD  R23,7
000646 c01a      	RJMP __CFD15
                 __CFD17:
000647 2777      	CLR  R23
000648 2355      	TST  R21
000649 f0b9      	BREQ __CFD15
                 __CFD18:
00064a 0fee      	LSL  R30
00064b 1fff      	ROL  R31
00064c 1f66      	ROL  R22
00064d 1f77      	ROL  R23
00064e 955a      	DEC  R21
00064f f7d1      	BRNE __CFD18
000650 c010      	RJMP __CFD15
                 __CFD11:
000651 2777      	CLR  R23
                 __CFD12:
000652 3058      	CPI  R21,8
000653 f028      	BRLO __CFD13
000654 2fef      	MOV  R30,R31
000655 2ff6      	MOV  R31,R22
000656 2f67      	MOV  R22,R23
000657 5058      	SUBI R21,8
000658 cff9      	RJMP __CFD12
                 __CFD13:
000659 2355      	TST  R21
00065a f031      	BREQ __CFD15
                 __CFD14:
00065b 9576      	LSR  R23
00065c 9567      	ROR  R22
00065d 95f7      	ROR  R31
00065e 95e7      	ROR  R30
00065f 955a      	DEC  R21
000660 f7d1      	BRNE __CFD14
                 __CFD15:
000661 2000      	TST  R0
000662 f40a      	BRPL __CFD16
000663 d084      	RCALL __ANEGD1
                 __CFD16:
000664 915f      	POP  R21
000665 9508      	RET
                 
                 __CDF1U:
000666 9468      	SET
000667 c001      	RJMP __CDF1U0
                 __CDF1:
000668 94e8      	CLT
                 __CDF1U0:
000669 9730      	SBIW R30,0
00066a 4060      	SBCI R22,0
00066b 4070      	SBCI R23,0
00066c f0b1      	BREQ __CDF10
00066d 2400      	CLR  R0
00066e f026      	BRTS __CDF11
00066f 2377      	TST  R23
000670 f412      	BRPL __CDF11
000671 9400      	COM  R0
000672 d075      	RCALL __ANEGD1
                 __CDF11:
000673 2e17      	MOV  R1,R23
000674 e17e      	LDI  R23,30
000675 2011      	TST  R1
                 __CDF12:
000676 f032      	BRMI __CDF13
000677 957a      	DEC  R23
000678 0fee      	LSL  R30
000679 1fff      	ROL  R31
00067a 1f66      	ROL  R22
00067b 1c11      	ROL  R1
00067c cff9      	RJMP __CDF12
                 __CDF13:
00067d 2fef      	MOV  R30,R31
00067e 2ff6      	MOV  R31,R22
00067f 2d61      	MOV  R22,R1
000680 935f      	PUSH R21
000681 df8a      	RCALL __REPACK
000682 915f      	POP  R21
                 __CDF10:
000683 9508      	RET
                 
                 __ZERORES:
000684 27ee      	CLR  R30
000685 27ff      	CLR  R31
000686 2766      	CLR  R22
000687 2777      	CLR  R23
000688 915f      	POP  R21
000689 9508      	RET
                 
                 __MINRES:
00068a efef      	SER  R30
00068b efff      	SER  R31
00068c e76f      	LDI  R22,0x7F
00068d ef7f      	SER  R23
00068e 915f      	POP  R21
00068f 9508      	RET
                 
                 __MAXRES:
000690 efef      	SER  R30
000691 efff      	SER  R31
000692 e76f      	LDI  R22,0x7F
000693 e77f      	LDI  R23,0x7F
000694 915f      	POP  R21
000695 9508      	RET
                 
                 __MULF12:
000696 935f      	PUSH R21
000697 df86      	RCALL __UNPACK
000698 3870      	CPI  R23,0x80
000699 f351      	BREQ __ZERORES
00069a 3890      	CPI  R25,0x80
00069b f341      	BREQ __ZERORES
00069c 2401      	EOR  R0,R1
00069d 9408      	SEC
00069e 1f79      	ADC  R23,R25
00069f f423      	BRVC __MULF124
0006a0 f31c      	BRLT __ZERORES
                 __MULF125:
0006a1 2000      	TST  R0
0006a2 f33a      	BRMI __MINRES
0006a3 cfec      	RJMP __MAXRES
                 __MULF124:
0006a4 920f      	PUSH R0
0006a5 931f      	PUSH R17
0006a6 932f      	PUSH R18
0006a7 933f      	PUSH R19
0006a8 934f      	PUSH R20
0006a9 2711      	CLR  R17
0006aa 2722      	CLR  R18
0006ab 2799      	CLR  R25
0006ac 9f68      	MUL  R22,R24
0006ad 01a0      	MOVW R20,R0
0006ae 9f8f      	MUL  R24,R31
0006af 2d30      	MOV  R19,R0
0006b0 0d41      	ADD  R20,R1
0006b1 1f59      	ADC  R21,R25
0006b2 9f6b      	MUL  R22,R27
0006b3 0d30      	ADD  R19,R0
0006b4 1d41      	ADC  R20,R1
0006b5 1f59      	ADC  R21,R25
0006b6 9f8e      	MUL  R24,R30
0006b7 d027      	RCALL __MULF126
0006b8 9fbf      	MUL  R27,R31
0006b9 d025      	RCALL __MULF126
0006ba 9f6a      	MUL  R22,R26
0006bb d023      	RCALL __MULF126
0006bc 9fbe      	MUL  R27,R30
0006bd d01d      	RCALL __MULF127
0006be 9faf      	MUL  R26,R31
0006bf d01b      	RCALL __MULF127
0006c0 9fae      	MUL  R26,R30
0006c1 0d11      	ADD  R17,R1
0006c2 1f29      	ADC  R18,R25
0006c3 1f39      	ADC  R19,R25
0006c4 1f49      	ADC  R20,R25
0006c5 1f59      	ADC  R21,R25
0006c6 2fe3      	MOV  R30,R19
0006c7 2ff4      	MOV  R31,R20
0006c8 2f65      	MOV  R22,R21
0006c9 2f52      	MOV  R21,R18
0006ca 914f      	POP  R20
0006cb 913f      	POP  R19
0006cc 912f      	POP  R18
0006cd 911f      	POP  R17
0006ce 900f      	POP  R0
0006cf 2366      	TST  R22
0006d0 f02a      	BRMI __MULF122
0006d1 0f55      	LSL  R21
0006d2 1fee      	ROL  R30
0006d3 1fff      	ROL  R31
0006d4 1f66      	ROL  R22
0006d5 c002      	RJMP __MULF123
                 __MULF122:
0006d6 9573      	INC  R23
0006d7 f24b      	BRVS __MULF125
                 __MULF123:
0006d8 df29      	RCALL __ROUND_REPACK
0006d9 915f      	POP  R21
0006da 9508      	RET
                 
                 __MULF127:
0006db 0d10      	ADD  R17,R0
0006dc 1d21      	ADC  R18,R1
0006dd 1f39      	ADC  R19,R25
0006de c002      	RJMP __MULF128
                 __MULF126:
0006df 0d20      	ADD  R18,R0
0006e0 1d31      	ADC  R19,R1
                 __MULF128:
0006e1 1f49      	ADC  R20,R25
0006e2 1f59      	ADC  R21,R25
0006e3 9508      	RET
                 
                 __ANEGW1:
0006e4 95f1      	NEG  R31
0006e5 95e1      	NEG  R30
0006e6 40f0      	SBCI R31,0
0006e7 9508      	RET
                 
                 __ANEGD1:
0006e8 95f0      	COM  R31
0006e9 9560      	COM  R22
0006ea 9570      	COM  R23
0006eb 95e1      	NEG  R30
0006ec 4fff      	SBCI R31,-1
0006ed 4f6f      	SBCI R22,-1
0006ee 4f7f      	SBCI R23,-1
0006ef 9508      	RET
                 
                 __LSLD12:
0006f0 23ee      	TST  R30
0006f1 2e0e      	MOV  R0,R30
0006f2 01fd      	MOVW R30,R26
0006f3 01bc      	MOVW R22,R24
0006f4 f031      	BREQ __LSLD12R
                 __LSLD12L:
0006f5 0fee      	LSL  R30
0006f6 1fff      	ROL  R31
0006f7 1f66      	ROL  R22
0006f8 1f77      	ROL  R23
0006f9 940a      	DEC  R0
0006fa f7d1      	BRNE __LSLD12L
                 __LSLD12R:
0006fb 9508      	RET
                 
                 __LSRD12:
0006fc 23ee      	TST  R30
0006fd 2e0e      	MOV  R0,R30
0006fe 01fd      	MOVW R30,R26
0006ff 01bc      	MOVW R22,R24
000700 f031      	BREQ __LSRD12R
                 __LSRD12L:
000701 9576      	LSR  R23
000702 9567      	ROR  R22
000703 95f7      	ROR  R31
000704 95e7      	ROR  R30
000705 940a      	DEC  R0
000706 f7d1      	BRNE __LSRD12L
                 __LSRD12R:
000707 9508      	RET
                 
                 __LSRD16:
000708 2fe6      	MOV  R30,R22
000709 2ff7      	MOV  R31,R23
00070a e060      	LDI  R22,0
00070b e070      	LDI  R23,0
00070c 9508      	RET
                 
                 __CWD1:
00070d 2f6f      	MOV  R22,R31
00070e 0f66      	ADD  R22,R22
00070f 0b66      	SBC  R22,R22
000710 2f76      	MOV  R23,R22
000711 9508      	RET
                 
                 __MULW12U:
000712 9ffa      	MUL  R31,R26
000713 2df0      	MOV  R31,R0
000714 9feb      	MUL  R30,R27
000715 0df0      	ADD  R31,R0
000716 9fea      	MUL  R30,R26
000717 2de0      	MOV  R30,R0
000718 0df1      	ADD  R31,R1
000719 9508      	RET
                 
                 __MULW12:
00071a d01a      	RCALL __CHKSIGNW
00071b dff6      	RCALL __MULW12U
00071c f40e      	BRTC __MULW121
00071d dfc6      	RCALL __ANEGW1
                 __MULW121:
00071e 9508      	RET
                 
                 __DIVW21U:
00071f 2400      	CLR  R0
000720 2411      	CLR  R1
000721 e190      	LDI  R25,16
                 __DIVW21U1:
000722 0faa      	LSL  R26
000723 1fbb      	ROL  R27
000724 1c00      	ROL  R0
000725 1c11      	ROL  R1
000726 1a0e      	SUB  R0,R30
000727 0a1f      	SBC  R1,R31
000728 f418      	BRCC __DIVW21U2
000729 0e0e      	ADD  R0,R30
00072a 1e1f      	ADC  R1,R31
00072b c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00072c 60a1      	SBR  R26,1
                 __DIVW21U3:
00072d 959a      	DEC  R25
00072e f799      	BRNE __DIVW21U1
00072f 01fd      	MOVW R30,R26
000730 01d0      	MOVW R26,R0
000731 9508      	RET
                 
                 __MODW21U:
000732 dfec      	RCALL __DIVW21U
000733 01fd      	MOVW R30,R26
000734 9508      	RET
                 
                 __CHKSIGNW:
000735 94e8      	CLT
000736 fff7      	SBRS R31,7
000737 c002      	RJMP __CHKSW1
000738 dfab      	RCALL __ANEGW1
000739 9468      	SET
                 __CHKSW1:
00073a ffb7      	SBRS R27,7
00073b c006      	RJMP __CHKSW2
00073c 95a0      	COM  R26
00073d 95b0      	COM  R27
00073e 9611      	ADIW R26,1
00073f f800      	BLD  R0,0
000740 9403      	INC  R0
000741 fa00      	BST  R0,0
                 __CHKSW2:
000742 9508      	RET
                 
                 __GETW1P:
000743 91ed      	LD   R30,X+
000744 91fc      	LD   R31,X
000745 9711      	SBIW R26,1
000746 9508      	RET
                 
                 __GETD1S0:
000747 81e8      	LD   R30,Y
000748 81f9      	LDD  R31,Y+1
000749 816a      	LDD  R22,Y+2
00074a 817b      	LDD  R23,Y+3
00074b 9508      	RET
                 
                 __GETD2S0:
00074c 81a8      	LD   R26,Y
00074d 81b9      	LDD  R27,Y+1
00074e 818a      	LDD  R24,Y+2
00074f 819b      	LDD  R25,Y+3
000750 9508      	RET
                 
                 __PUTPARD2:
000751 939a      	ST   -Y,R25
000752 938a      	ST   -Y,R24
000753 93ba      	ST   -Y,R27
000754 93aa      	ST   -Y,R26
000755 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  35 r1 :  18 r2 :   0 r3 :   0 r4 :  13 r5 :   6 r6 :  16 r7 :   3 
r8 :  11 r9 :   3 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:  13 r18:   7 r19:   8 r20:   8 r21:  44 r22:  43 r23:  38 
r24:  42 r25:  31 r26: 140 r27:  42 r28:   6 r29:   1 r30: 276 r31: 101 
x  :  14 y  :  88 z  :  10 
Registers used: 26 out of 35 (74.3%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :  10 
adiw  :  17 and   :   2 andi  :  30 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  17 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   3 
brlt  :   1 brmi  :   4 brne  :  63 brpl  :   4 brsh  :   0 brtc  :   2 
brts  :   1 brvc  :   1 brvs  :   2 bset  :   0 bst   :   1 call  :  27 
cbi   :   7 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  21 cls   :   0 clt   :   3 clv   :   0 clz   :   0 com   :   6 
cp    :   5 cpc   :  22 cpi   :  34 cpse  :   0 dec   :  14 des   :   0 
elpm  :   0 eor   :   4 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   1 
ijmp  :   0 in    :   3 inc   :   2 jmp   :  36 ld    :  31 ldd   :  28 
ldi   : 149 lds   :  29 lpm   :   7 lsl   :  11 lsr   :   4 mov   :  28 
movw  :  39 mul   :  12 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 
or    :   1 ori   :   7 out   :   7 pop   :  13 push  :  12 rcall :  82 
ret   :  39 reti  :   0 rjmp  :  66 rol   :  17 ror   :  12 sbc   :   2 
sbci  :  17 sbi   :   3 sbic  :   0 sbis  :   0 sbiw  :  17 sbr   :   1 
sbrc  :   0 sbrs  :   3 sec   :   1 seh   :   0 sei   :   0 sen   :   0 
ser   :   8 ses   :   0 set   :   3 sev   :   0 sez   :   0 sleep :   0 
spm   :   0 st    :  43 std   :   3 sts   :  37 sub   :   2 subi  :  16 
swap  :   0 tst   :  11 wdr   :   1 
Instructions used: 71 out of 117 (60.7%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000eac   2526   1230   3756  131072   2.9%
[.dseg] 0x000100 0x0009d9      0   1241   1241    4096  30.3%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 8 warnings
